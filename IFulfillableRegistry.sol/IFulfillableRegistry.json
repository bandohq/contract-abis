{"abi":[{"type":"function","name":"addFulfiller","inputs":[{"name":"fulfiller","type":"address","internalType":"address"},{"name":"serviceID","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"addService","inputs":[{"name":"serviceId","type":"uint256","internalType":"uint256"},{"name":"service","type":"tuple","internalType":"struct Service","components":[{"name":"serviceId","type":"uint256","internalType":"uint256"},{"name":"beneficiary","type":"address","internalType":"address payable"},{"name":"fulfiller","type":"address","internalType":"address"}]},{"name":"fulfillmentFeePercentage","type":"uint16","internalType":"uint16"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"addServiceRef","inputs":[{"name":"serviceId","type":"uint256","internalType":"uint256"},{"name":"serviceRef","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getService","inputs":[{"name":"serviceId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"tuple","internalType":"struct Service","components":[{"name":"serviceId","type":"uint256","internalType":"uint256"},{"name":"beneficiary","type":"address","internalType":"address payable"},{"name":"fulfiller","type":"address","internalType":"address"}]},{"name":"","type":"uint16","internalType":"uint16"}],"stateMutability":"view"},{"type":"function","name":"isRefValid","inputs":[{"name":"serviceId","type":"uint256","internalType":"uint256"},{"name":"serviceRef","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"removeServiceAddress","inputs":[{"name":"serviceId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateServiceBeneficiary","inputs":[{"name":"serviceId","type":"uint256","internalType":"uint256"},{"name":"newBeneficiary","type":"address","internalType":"address payable"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateServiceFulfiller","inputs":[{"name":"serviceId","type":"uint256","internalType":"uint256"},{"name":"newFulfiller","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateServicefeeAmountBasisPoints","inputs":[{"name":"serviceId","type":"uint256","internalType":"uint256"},{"name":"newfeeAmountBasisPoints","type":"uint16","internalType":"uint16"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"addFulfiller(address,uint256)":"b34755ac","addService(uint256,(uint256,address,address),uint16)":"4f38e258","addServiceRef(uint256,string)":"3f8a7fe0","getService(uint256)":"ef0e239b","isRefValid(uint256,string)":"d4a24703","removeServiceAddress(uint256)":"9f660697","updateServiceBeneficiary(uint256,address)":"8b82ba78","updateServiceFulfiller(uint256,address)":"fb31fe80","updateServicefeeAmountBasisPoints(uint256,uint16)":"0cf4e14c"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fulfiller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"serviceID\",\"type\":\"uint256\"}],\"name\":\"addFulfiller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"serviceId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"serviceId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fulfiller\",\"type\":\"address\"}],\"internalType\":\"struct Service\",\"name\":\"service\",\"type\":\"tuple\"},{\"internalType\":\"uint16\",\"name\":\"fulfillmentFeePercentage\",\"type\":\"uint16\"}],\"name\":\"addService\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"serviceId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"serviceRef\",\"type\":\"string\"}],\"name\":\"addServiceRef\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"serviceId\",\"type\":\"uint256\"}],\"name\":\"getService\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"serviceId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fulfiller\",\"type\":\"address\"}],\"internalType\":\"struct Service\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"serviceId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"serviceRef\",\"type\":\"string\"}],\"name\":\"isRefValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"serviceId\",\"type\":\"uint256\"}],\"name\":\"removeServiceAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"serviceId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"newBeneficiary\",\"type\":\"address\"}],\"name\":\"updateServiceBeneficiary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"serviceId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newFulfiller\",\"type\":\"address\"}],\"name\":\"updateServiceFulfiller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"serviceId\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"newfeeAmountBasisPoints\",\"type\":\"uint16\"}],\"name\":\"updateServicefeeAmountBasisPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for FulfillableRegistry This interface is intended to be implemented by any contract that wants to be a fulfillable registry. The FulfillableRegistry contract is a contract that can store the address of the contract that implements the fulfillable service. The address can be retrieved by the serviceId.  The FulfillableRegistry contract is upgradeable. The FulfillableRegistry contract is Ownable. The FulfillableRegistry contract uses UUPSUpgradeable.\",\"kind\":\"dev\",\"methods\":{\"addFulfiller(address,uint256)\":{\"params\":{\"fulfiller\":\"The address of the fulfiller.\",\"serviceID\":\"The service identifier.\"}},\"addService(uint256,(uint256,address,address),uint16)\":{\"params\":{\"service\":\"The service details.\",\"serviceId\":\"The unique identifier for the service.\"},\"returns\":{\"_0\":\"Returns true if the service is successfully added.\"}},\"addServiceRef(uint256,string)\":{\"params\":{\"serviceId\":\"The service identifier.\",\"serviceRef\":\"The reference to the service.\"}},\"getService(uint256)\":{\"params\":{\"serviceId\":\"The service identifier.\"},\"returns\":{\"_0\":\"The service details.\"}},\"isRefValid(uint256,string)\":{\"params\":{\"serviceId\":\"The service identifier.\",\"serviceRef\":\"The reference to check.\"},\"returns\":{\"_0\":\"Returns true if the reference is valid.\"}},\"removeServiceAddress(uint256)\":{\"params\":{\"serviceId\":\"The service identifier.\"}},\"updateServiceBeneficiary(uint256,address)\":{\"details\":\"Updates the beneficiary of a service.\",\"params\":{\"newBeneficiary\":\"the new beneficiary address\",\"serviceId\":\"the service identifier\"}},\"updateServiceFulfiller(uint256,address)\":{\"details\":\"Updates the fulfiller of a service.\",\"params\":{\"newFulfiller\":\"the new fulfiller address\",\"serviceId\":\"the service identifier\"}},\"updateServicefeeAmountBasisPoints(uint256,uint16)\":{\"details\":\"Updates the fee amount percentage of a service.\",\"params\":{\"newfeeAmountBasisPoints\":\"the new fee amount percentage\",\"serviceId\":\"the service identifier\"}}},\"title\":\"IFulfillableRegistry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addFulfiller(address,uint256)\":{\"notice\":\"Registers a new fulfiller for a service.\"},\"addService(uint256,(uint256,address,address),uint16)\":{\"notice\":\"Adds a new service to the registry.\"},\"addServiceRef(uint256,string)\":{\"notice\":\"Adds a reference to a service.\"},\"getService(uint256)\":{\"notice\":\"Retrieves the service details by its identifier.\"},\"isRefValid(uint256,string)\":{\"notice\":\"Checks if a service reference is valid.\"},\"removeServiceAddress(uint256)\":{\"notice\":\"Removes a service from the registry.\"},\"updateServiceBeneficiary(uint256,address)\":{\"notice\":\"updateServiceBeneficiary\"},\"updateServiceFulfiller(uint256,address)\":{\"notice\":\"updateServiceFulfiller\"},\"updateServicefeeAmountBasisPoints(uint256,uint16)\":{\"notice\":\"updateServicefeeAmountBasisPoints\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/periphery/registry/IFulfillableRegistry.sol\":\"IFulfillableRegistry\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":bando/=contracts/\",\":create3-factory/=lib/create3-factory/src/\",\":create3-proxy/=lib/create3-proxy/src/\",\":ds-test/=lib/create3-factory/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/create3-factory/lib/solmate/src/\"]},\"sources\":{\"contracts/periphery/registry/IFulfillableRegistry.sol\":{\"keccak256\":\"0x31bdb62afc987867166c0c03f819ec55c0db7113b5cdecfa3f2a21a0f8e4cf8f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132ddf03cfd79c9d684e2a92d0bf2289d943e7b2852e28aa4e891d62db18b65e\",\"dweb:/ipfs/QmZvy85Th335VoTtj5iKNgunVsXCbc46758LC4TyiFRkCL\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"fulfiller","type":"address"},{"internalType":"uint256","name":"serviceID","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"addFulfiller"},{"inputs":[{"internalType":"uint256","name":"serviceId","type":"uint256"},{"internalType":"struct Service","name":"service","type":"tuple","components":[{"internalType":"uint256","name":"serviceId","type":"uint256"},{"internalType":"address payable","name":"beneficiary","type":"address"},{"internalType":"address","name":"fulfiller","type":"address"}]},{"internalType":"uint16","name":"fulfillmentFeePercentage","type":"uint16"}],"stateMutability":"nonpayable","type":"function","name":"addService","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"serviceId","type":"uint256"},{"internalType":"string","name":"serviceRef","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"addServiceRef"},{"inputs":[{"internalType":"uint256","name":"serviceId","type":"uint256"}],"stateMutability":"view","type":"function","name":"getService","outputs":[{"internalType":"struct Service","name":"","type":"tuple","components":[{"internalType":"uint256","name":"serviceId","type":"uint256"},{"internalType":"address payable","name":"beneficiary","type":"address"},{"internalType":"address","name":"fulfiller","type":"address"}]},{"internalType":"uint16","name":"","type":"uint16"}]},{"inputs":[{"internalType":"uint256","name":"serviceId","type":"uint256"},{"internalType":"string","name":"serviceRef","type":"string"}],"stateMutability":"view","type":"function","name":"isRefValid","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"serviceId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"removeServiceAddress"},{"inputs":[{"internalType":"uint256","name":"serviceId","type":"uint256"},{"internalType":"address payable","name":"newBeneficiary","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"updateServiceBeneficiary"},{"inputs":[{"internalType":"uint256","name":"serviceId","type":"uint256"},{"internalType":"address","name":"newFulfiller","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"updateServiceFulfiller"},{"inputs":[{"internalType":"uint256","name":"serviceId","type":"uint256"},{"internalType":"uint16","name":"newfeeAmountBasisPoints","type":"uint16"}],"stateMutability":"nonpayable","type":"function","name":"updateServicefeeAmountBasisPoints"}],"devdoc":{"kind":"dev","methods":{"addFulfiller(address,uint256)":{"params":{"fulfiller":"The address of the fulfiller.","serviceID":"The service identifier."}},"addService(uint256,(uint256,address,address),uint16)":{"params":{"service":"The service details.","serviceId":"The unique identifier for the service."},"returns":{"_0":"Returns true if the service is successfully added."}},"addServiceRef(uint256,string)":{"params":{"serviceId":"The service identifier.","serviceRef":"The reference to the service."}},"getService(uint256)":{"params":{"serviceId":"The service identifier."},"returns":{"_0":"The service details."}},"isRefValid(uint256,string)":{"params":{"serviceId":"The service identifier.","serviceRef":"The reference to check."},"returns":{"_0":"Returns true if the reference is valid."}},"removeServiceAddress(uint256)":{"params":{"serviceId":"The service identifier."}},"updateServiceBeneficiary(uint256,address)":{"details":"Updates the beneficiary of a service.","params":{"newBeneficiary":"the new beneficiary address","serviceId":"the service identifier"}},"updateServiceFulfiller(uint256,address)":{"details":"Updates the fulfiller of a service.","params":{"newFulfiller":"the new fulfiller address","serviceId":"the service identifier"}},"updateServicefeeAmountBasisPoints(uint256,uint16)":{"details":"Updates the fee amount percentage of a service.","params":{"newfeeAmountBasisPoints":"the new fee amount percentage","serviceId":"the service identifier"}}},"version":1},"userdoc":{"kind":"user","methods":{"addFulfiller(address,uint256)":{"notice":"Registers a new fulfiller for a service."},"addService(uint256,(uint256,address,address),uint16)":{"notice":"Adds a new service to the registry."},"addServiceRef(uint256,string)":{"notice":"Adds a reference to a service."},"getService(uint256)":{"notice":"Retrieves the service details by its identifier."},"isRefValid(uint256,string)":{"notice":"Checks if a service reference is valid."},"removeServiceAddress(uint256)":{"notice":"Removes a service from the registry."},"updateServiceBeneficiary(uint256,address)":{"notice":"updateServiceBeneficiary"},"updateServiceFulfiller(uint256,address)":{"notice":"updateServiceFulfiller"},"updateServicefeeAmountBasisPoints(uint256,uint16)":{"notice":"updateServicefeeAmountBasisPoints"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","bando/=contracts/","create3-factory/=lib/create3-factory/src/","create3-proxy/=lib/create3-proxy/src/","ds-test/=lib/create3-factory/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","hardhat/=node_modules/hardhat/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","solmate/=lib/create3-factory/lib/solmate/src/"],"optimizer":{"enabled":true,"runs":1000000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/periphery/registry/IFulfillableRegistry.sol":"IFulfillableRegistry"},"evmVersion":"cancun","libraries":{}},"sources":{"contracts/periphery/registry/IFulfillableRegistry.sol":{"keccak256":"0x31bdb62afc987867166c0c03f819ec55c0db7113b5cdecfa3f2a21a0f8e4cf8f","urls":["bzz-raw://132ddf03cfd79c9d684e2a92d0bf2289d943e7b2852e28aa4e891d62db18b65e","dweb:/ipfs/QmZvy85Th335VoTtj5iKNgunVsXCbc46758LC4TyiFRkCL"],"license":"MIT"}},"version":1},"id":11}